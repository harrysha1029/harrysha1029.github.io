<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>Harry Sha</title>
        <link>https://example.com/posts</link>
        <description>Harry Sha&apos;s Personal Website</description>
        <lastBuildDate>Mon, 08 Jun 2020 07:50:57 GMT</lastBuildDate>
        <docs>http://blogs.law.harvard.edu/tech/rss</docs>
        <generator>Elmstatic</generator>
        <language>en</language>
        <image>
            <title>Harry Sha</title>
            <url>https://example.com/img/logo.png</url>
            <link>https://example.com/posts</link>
        </image>
        <copyright>Copyright: Author</copyright>
        <item>
            <title><![CDATA[Axioms of ZFC Set Theory]]></title>
            <link>https://example.com/posts/2019-10-09-zfc</link>
            <guid>https://example.com/posts/2019-10-09-zfc</guid>
            <pubDate>Wed, 09 Oct 2019 00:00:00 GMT</pubDate>
            <description><![CDATA[ZFC is list of axioms for set theory that are commonly used as a foundation for mathematics. In this post we'll talk about the axioms of ZFC, why they're important, and what happens if we took away certain axioms. To help us, we'll look (informally) at models of certain sub-theories of ZFC.

The Language of Set Theory
The language of ZFC is first order logic (with equality) and a single binary predicate symbol \\(\in\\). This gives us access to infinitely many variables symbols \\(x, y, z...\\),...]]></description>
        </item>
        <item>
            <title><![CDATA[Haskell Concepts with Sets]]></title>
            <link>https://example.com/posts/2019-12-15-haskellset</link>
            <guid>https://example.com/posts/2019-12-15-haskellset</guid>
            <pubDate>Sun, 15 Dec 2019 00:00:00 GMT</pubDate>
            <description><![CDATA[In this post we'll explore some Haskell and functional programming concepts with set theory. Our goal here is to implement a type that represents a set, and build the Von Neumann universe up to \\(V_{\omega}\\).

Haskell
You can follow the examples in this post here (you can open it in a bigger window by clicking the top right). To play around with it, you can type :l main in the ghci prompt, which will load the code.

Recursive data types
You can define data types in Haskell using the data keyw...]]></description>
        </item>
        <item>
            <title><![CDATA[There is No Greater Love Guitar Transcription]]></title>
            <link>https://example.com/posts/2019-12-15-thereisnogreaterlove</link>
            <guid>https://example.com/posts/2019-12-15-thereisnogreaterlove</guid>
            <pubDate>Sun, 15 Dec 2019 00:00:00 GMT</pubDate>
            <description><![CDATA[I rediscovered Amy Winehouse's music recently, and have been obsessed. I really like her album Frank, and her live performances. One of my favorites is her live version of There is No Greater Love in the Janice Long Session (on the Frank B-Side).

Here is a transcription and analysis of the guitar part.
...]]></description>
        </item>
        <item>
            <title><![CDATA[Lua (Jacob Collier, feat. MARO) Guitar Transcription]]></title>
            <link>https://example.com/posts/2019-12-17-lua</link>
            <guid>https://example.com/posts/2019-12-17-lua</guid>
            <pubDate>Tue, 17 Dec 2019 00:00:00 GMT</pubDate>
            <description><![CDATA[Lua is my favorite track on Jacob Collier's album Djesse vol. 2. Everything about the song is just so delicious - from the lush strings, to the amazingly smooth voice of MARO, to the serene solo. In this post I'll talk a bit about MARO's guitar playing in the verse. We'll focus on the section just as MARO begins to sing (and play) - around 0:26 - 2:05. Here is the transcription for the guitar part.

Harmony
Something you'll notice is that the bass notes are typically omitted (left for the bass p...]]></description>
        </item>
        <item>
            <title><![CDATA[Song Order - Guitar Tunings and the Travelling Salesperson]]></title>
            <link>https://example.com/posts/2020-04-05-tuning-search</link>
            <guid>https://example.com/posts/2020-04-05-tuning-search</guid>
            <pubDate>Sun, 05 Apr 2020 00:00:00 GMT</pubDate>
            <description><![CDATA[I play gigs with my acoustic guitar every now and then, and a lot of the pieces I play feature weird tunings. So here's the problem: tuning from one tuning to another very different tuning not only takes a long time it makes the guitar go out of tune more quickly and also increases the risk of broken strings. Thus I want to order my songs such that each jump between tunings isn't that large!

Definitions
Let's start with some definitions! First in math, then in code.
Associate each key on the pi...]]></description>
        </item>
    </channel>
</rss>